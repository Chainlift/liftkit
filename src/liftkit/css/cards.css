.card {
  display: block;
  background-color: var(--lk-surface);

  /* Default Vals */
  --local-offset-factor: 1em; /* Used for padding-top when first child is not an image. */
  --local-offset-diff: 1em; /* Used for pushing stickers slightly to the right when present. */
  --largest-child-font-size: var(--body-font-size);
  --largest-child-line-height: var(--body-line-height);

  padding: var(--local-offset-factor) var(--largest-child-font-size) var(--largest-child-font-size);

  border-radius: var(--local-offset-factor);
}

.card-container {
  display: flex;
  flex-direction: column;
  gap: calc(var(--largest-child-line-height) * 1em);
}

/* 
[data-tag="card-top-row"] > span {
  opacity: 0.65;
} */
.scaleFactor-zero {
  padding: 0px;
  border-radius: var(--lk-size-sm);
}

.scaleFactor-zero:hover {
  padding: var(--lk-size-xs);
}

.scaleFactor-display1 {
  --local-offset-factor: var(--display1-offset);
  --local-offset-diff: calc(1em - var(--local-offset-factor));
  --largest-child-font-size: var(--display1-font-size);
  --largest-child-line-height: var(--display1-line-height);

  padding: var(--local-offset-factor) var(--largest-child-font-size) var(--largest-child-font-size);

  border-radius: var(--local-offset-factor);
}

.scaleFactor-display2 {
  --local-offset-factor: var(--display2-offset);
  --local-offset-diff: calc(1em - var(--local-offset-factor));
  --largest-child-font-size: var(--display2-font-size);
  --largest-child-line-height: var(--display2-line-height);
  padding: inherit;
}

.scaleFactor-title1 {
  --local-offset-factor: var(--title1-offset);
  --local-offset-diff: calc(1em - var(--local-offset-factor));
  --largest-child-font-size: var(--title1-font-size);
  --largest-child-line-height: var(--title1-line-height);
}

.scaleFactor-title2 {
  --local-offset-factor: var(--title2-offset);
  --local-offset-diff: calc(1em - var(--local-offset-factor));
  --largest-child-font-size: var(--title2-font-size);
  --largest-child-line-height: var(--title2-line-height);
}

.scaleFactor-title3 {
  --local-offset-factor: var(--title3-offset);
  --local-offset-diff: calc(1em - var(--local-offset-factor));
  --largest-child-font-size: var(--title3-font-size);
  --largest-child-line-height: var(--title3-line-height);
}

.scaleFactor-heading {
  --local-offset-factor: var(--heading-offset);
  --local-offset-diff: calc(1em - var(--local-offset-factor));
  --largest-child-font-size: var(--heading-font-size);
  --largest-child-line-height: var(--heading-line-height);
}

.scaleFactor-subheading {
  --local-offset-factor: var(--subheading-offset);
  --local-offset-diff: calc(1em - var(--local-offset-factor));
  --largest-child-font-size: var(--subheading-font-size);
  --largest-child-line-height: var(--subheading-line-height);
}

.scaleFactor-body {
  --local-offset-factor: var(--body-offset);
  --local-offset-diff: calc(1em - var(--local-offset-factor));
  --largest-child-font-size: var(--body-font-size);
  --largest-child-line-height: var(--body-line-height);

  padding-top: var(--local-offset-factor);
}

.scaleFactor-callout {
  --local-offset-factor: var(--callout-offset);
  --local-offset-diff: calc(1em - var(--local-offset-factor));
  --largest-child-font-size: var(--callout-font-size);
  --largest-child-line-height: var(--callout-line-height);
}

.scaleFactor-label {
  --local-offset-factor: var(--label-offset);
  --local-offset-diff: calc(1em - var(--local-offset-factor));
  --largest-child-font-size: var(--label-font-size);
  --largest-child-line-height: var(--label-line-height);
}

.scaleFactor-caption {
  --local-offset-factor: var(--caption-offset);
  --local-offset-diff: calc(1em - var(--local-offset-factor));
  --largest-child-font-size: var(--caption-font-size);
  --largest-child-line-height: var(--caption-line-height);
}

.scaleFactor-capline {
  --local-offset-factor: var(--capline-offset);
  --local-offset-diff: calc(1em - var(--local-offset-factor));
  --largest-child-font-size: var(--capline-font-size);
  --largest-child-line-height: var(--capline-line-height);
}

/* If first child is an image, disable offsets and enable manual flex gaps */
.card:has(:first-child[data-tag="card-image"]) {
  padding: var(--largest-child-font-size);
  display: flex;
  flex-flow: column nowrap;
  align-items: stretch;
  gap: var(--largest-child-font-size);
}

.scaleFactor-heading:has() .card .sticker-wrap {
  /* Push the sticker slightly to the right based on the largest font size */

  height: calc(1em * var(--heading-line-height));
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;

  right: calc(-1 * var(--local-offset-diff));
}

.glass {
  background-color: transparent;
  backdrop-filter: blur(10px) saturate(200%) brightness(10%);
  box-shadow: 0 0.128em 0.485em 0 rgba(0, 0, 0, 0.4);
  border: 1px solid var(--lk-outline);
}

.no-offset {
  --local-offset-factor: 1em;
}

.offset-bottom {
  padding-bottom: var(--local-offset-factor);
}

.card-content-wrap {
  position: relative;
  z-index: 0;
}

.card-fab {
  position: absolute;
  z-index: 99;
}

.card-fab.tr {
  top: 0;
  right: 0;
}

.card-click-layer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  background-color: var(--lk-onsurface);
  opacity: 0;
  transition: opacity 0.2s ease;
}

.card:hover .card-click-layer {
  opacity: 0.08;
}

.card:active .card-click-layer {
  opacity: 0.12;
}

.card.border-radius-0 {
  border-radius: 0em;
}

.card .static-bg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  opacity: 0.2;
}

.card:has(.static-bg) {
  position: relative;
  overflow: hidden;
}

.card:has(.static-bg) > *:not(.static-bg) {
  position: relative;
  z-index: 1;
}
